[SpringMVC]

1.WebProject 생성하기 (tomcat설정 , workspace  > ut-8)

2.Spring FrameWork (Jar 파일 추가)
  -core , context , beans , expression , aop
  -기타 의존 : logging
  -SpringMVC (Web)
  -Spring-Web(jar)
  -Spring-Webmvc(jar)
 
3.Web.xml 설정하기
  >org.springframework.web.servlet.DispatcherServlet;  
  >DispatcherServlet 설정하기 (Spring 에서 제공하는 클래스 :FrontController) 
   1.web.xml > url-pattern 설정 : *.htm , *.action , *.do (DispatcherServlet 실행)
   
   복습)
   기본 Model2 기반 MVC pattern
   --@WebServlet("*.htm")
   --public class BoardFrontController extends HttpServlet{
   --요청 판단 : (command(?cmd=list) , url(list.do))
   --doGet() , doPost() 
   --http://localhost:8090/KostaMvc/loing.htm
   
   위와 같은 작업을 SpringMVC 에서 동일
   --DispatcherServlet 제공 web.xml 등록 pattern 작업
   --web.xml
    <servlet>
  		<servlet-name>spring</servlet-name>
  		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	</servlet>
  	<servlet-mapping>
  		<servlet-name>spring</servlet-name>
  		<url-pattern>*.htm</url-pattern>
  	</servlet-mapping>
   (TEST)
   http://localhost:8090/SpringMVC_Basic01_Controller/index.htm
  
 4.DispatcherServlet 에 대한 설정을 담당하는 xml 만들기 (DI 작업)
   -HandlerMapping 작업은 xml 을 통해서 이루어져요
   ******* 주의 사항 ******** 
   1. 규칙 : <servlet-name>spring</servlet-name>
           > [spring]-servlet.xml  연결 성립
           > spring-servlet.xml 에서 DispatcherServlet 구성하는 DI 작업
  
   2. DispatcherServlet 사용자의 요청을 판단하고 어떤 controller 사용할 지 결정
      spring-servlet.xml 작업
      
      --그래서 Controller 만들기 
      >public class HelloController implements Controller{}
   
   3. [spring]-servlet.xml  > <bean 생성>  > injection 
      ><bean name="/hello.htm" class="kr.or.kosta.HelloController"></bean>
      
   실습)
   	   	1. 요청 : http://localhost:8090/SpringMVC_Basic01_Controller/hello.htm
   	   	2. url-pattern : *.htm 에 의해서 DispatcherServlet 동작
   	   	3. DispatcherServlet 의 DI 작업을  하는 spring-servlet.xml 에서
   	   	   Handler-Mapping 작업을 통해 해당되는 controller ...
   	   	   > hello.htm 찿기 
   	   	   > 해당하는 Controller 실행 
   	   	   > ModelAndView 생성 
   	   	   > ViewResolver 통해서 View 구성
   	   	   > 구성된 View 에서 display 작업
   	   	   > Client 에게 전달  
   
   
 :요청
 >http://localhost:8090/SpringMVC_Basic01_Controller/intro.htm  
 
   
   
      
      