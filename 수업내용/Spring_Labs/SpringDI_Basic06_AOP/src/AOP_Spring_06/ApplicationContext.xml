<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">

<!--  
	Calc calc = new NewCalc();
	
	Calc cal =(Calc)Proxy.newProxyInstance(
			 				   calc.getClass().getClassLoader(), //실제 클래스 메타 정보
				               calc.getClass().getInterfaces() , //행위정보(인터페이스)
				               new LogPringHandler(calc)         //핸들러(보조관심) : 실객체의 주소넘김 
			 				   );
-->
	<bean id="calc" class="AOP_Spring_06.NewCalc" />
	
	<bean id="logPrintAroundAdvice"    class="AOP_Spring_06.LogPrintAroundAdvice"></bean>
	<bean id="logPrintBeforeAdvice"    class="AOP_Spring_06.LogPrintBeforeAdvice"></bean>
	<bean id="logPrintAfterAdvice"     class="AOP_Spring_06.LogPrintAfterAdvice"></bean>
	<!--  
		(joinPoint) > Pointcut 개념을 사용해서 객체가 가지는 [ 특정 함수 ]만
		              제한적으로 보조 관심을 적용하고 싶어요
		              
	    NewCalc 객체 : (ADD , MUL , SUB) 현재 모든 함수가 advice 적용
	    
	    1.함수의 이름을 통해서 적용
	    import org.springframework.aop.support.NameMatchMethodPointcut;
		import org.springframework.aop.support.DefaultPointcutAdvisor;
		import org.springframework.aop.framework.ProxyFactoryBean;
	-->
	
	<!-- 1단계  -->
	<bean id="nameMatchMethodPointcut" class="org.springframework.aop.support.NameMatchMethodPointcut">
		<property name="mappedNames">
			<list>
				<value>ADD</value>
				<value>MUL</value>
			</list>
		</property>
	</bean>
	<!-- 2단계  : Pointcut 적용될  advice -->
	<bean id="defaultPointcutAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
		<property name="pointcut" ref="nameMatchMethodPointcut" />
		<property name="advice" ref="logPrintAroundAdvice" />
	</bean>
	<!-- 3단계 -->
	<bean id="proxy" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<list>
				<value>AOP_Spring_06.Calc</value><!-- 인터페이스 행위 정보 -->
			</list>
		</property>
		<property name="target" ref="calc" /> <!-- 실객체의 주소 정보  -->
		<property name="interceptorNames">
			<list>
			<!-- 
				<value>logPrintAroundAdvice</value>
				<value>logPrintBeforeAdvice</value>
				<value>logPrintAfterAdvice</value>
			-->	
				<value>defaultPointcutAdvisor</value>
			</list>
		</property>
	</bean>
	
</beans> 
