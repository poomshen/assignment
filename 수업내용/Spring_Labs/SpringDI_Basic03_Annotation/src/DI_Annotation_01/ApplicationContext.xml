<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">

<!--  
	    MonitorViewer viewer = new MonitorViewer();
		viewer.setRecorder(new Recorder());
-->
<!-- Annotation 사용없이 순수한 xml 설정을 통한 작업(1단계)  -->
<!-- 
<bean id="monitorViewer" class="DI_Annotation_01.MonitorViewer">
	<property name="recorder">
		<ref bean="recorder"/>
	</property>
</bean>
<bean id="recorder" class="DI_Annotation_01.Recorder"></bean> 
-->

<!--
*Spring 제공 Annotation
  
@Autowired (자동 주입) : By Type
목적 : 의존관계를 자동설정할 때 사용하며 [타입을 이용]하여 의존하는 객체를 삽입
       그러므로 해당 타입의 빈객체가 존재하지 않거나 
       또는 2개 이상 존재할 경우 [스프링은 예외]를 발생시키게 된다.

설정 위치 : [생성자], 필드, [메소드](굳이 setter메소드가 아니여도 된다)

@Autowired 적용되기 위해서는  전제조건
-IOC 컨테이너 안에 @Autowired 적용을 위한 bean(class) 이 등록
-org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor
 위 객체가 IOC 컨테이너 안에 등록
문제점) 만약에  10개의 annotation 적용하고자 한다면
        위 와 같은  class 10개를 bean 생성 
       <bean id="" class="AutowiredAnnotationBeanPostProcessor"></bean>
추가설정 : AutowiredAnnotationBeanPostProcessor 클래스를 빈으로 등록시켜줘야 한다. 
해당 설정 대신에 <context:annotation-config> 태그를 사용해도 된다.
옵션 : required - @Autowired어노테이션을 적용한 프로퍼티에 대해 굳이 설정할 필요가
       없는 경우에 false값을 주며 이때 해당 프로퍼티가 존재하지 않더라도 
       스프링은 예외를 발생시키지 않는다. 디폴트값은 true
       
       1.<context:annotation-config />
         :어노테이션에 필요한 빈(클래스)들을 한번에  등록시키는 방법
         context:annotation-config 사용하지 않으면 아래 처럼 등록
         : <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"></bean>
      
       2.@AutoWired (by Type) [Error 발생]
         2.1 : injection 되는 같은타입의 bean 컨테이너 안에 존재하지 않는 경우
         2.2 : injection 되는 타입이 여러개 있는 경우
               예)<bean id="yyyyyy" class="DI_Annotation_01.Recorder" />
                 => 만약 2개 : 이름으로 찿는 @Resource 
-->
<context:annotation-config />
<bean id="monitorViewer" class="DI_Annotation_01.MonitorViewer" />
<bean id="xxxxxx" class="DI_Annotation_01.Recorder" />

</beans> 

<!--  
여러개의 같은 타입의 bean 이 있어도 Error 가 안나는 경우
-Paramter 이름과 bean id 값이 같으면 찿아요 ^^

-->
